import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{MaxDeviceSize,MinDeviceSize}from"./DeviceModeModel.js";export class EmulatedDevice{constructor(){this.title="",this.type=Type.Unknown,this.vertical={width:0,height:0,outlineInsets:null,outlineImage:null},this.horizontal={width:0,height:0,outlineInsets:null,outlineImage:null},this.deviceScaleFactor=1,this.capabilities=[Capability.Touch,Capability.Mobile],this.userAgent="",this.modes=[],this._show=_Show.Default,this._showByDefault=!0,this._extension=null}static fromJSONV1(t){try{function e(t,e,i,s){if("object"!=typeof t||null===t||!t.hasOwnProperty(e)){if(void 0!==s)return s;throw new Error("Emulated device is missing required property '"+e+"'")}const o=t[e];if(typeof o!==i||null===o)throw new Error("Emulated device property '"+e+"' has wrong type '"+typeof o+"'");return o}function i(t,i){const s=e(t,i,"number");if(s!==Math.abs(s))throw new Error("Emulated device value '"+i+"' must be integer");return s}function s(t){return new UI.Geometry.Insets(i(t,"left"),i(t,"top"),i(t,"right"),i(t,"bottom"))}function o(t){const o={};if(o.width=i(t,"width"),o.width<0||o.width>MaxDeviceSize||o.width<MinDeviceSize)throw new Error("Emulated device has wrong width: "+o.width);if(o.height=i(t,"height"),o.height<0||o.height>MaxDeviceSize||o.height<MinDeviceSize)throw new Error("Emulated device has wrong height: "+o.height);const n=e(t.outline,"insets","object",null);if(n){if(o.outlineInsets=s(n),o.outlineInsets.left<0||o.outlineInsets.top<0)throw new Error("Emulated device has wrong outline insets");o.outlineImage=e(t.outline,"image","string")}return o}const n=new EmulatedDevice;n.title=e(t,"title","string"),n.type=e(t,"type","string");const r=e(t,"user-agent","string");n.userAgent=SDK.NetworkManager.MultitargetNetworkManager.patchUserAgentWithChromeVersion(r);const a=e(t,"capabilities","object",[]);if(!Array.isArray(a))throw new Error("Emulated device capabilities must be an array");n.capabilities=[];for(let t=0;t<a.length;++t){if("string"!=typeof a[t])throw new Error("Emulated device capability must be a string");n.capabilities.push(a[t])}if(n.deviceScaleFactor=e(t.screen,"device-pixel-ratio","number"),n.deviceScaleFactor<0||n.deviceScaleFactor>100)throw new Error("Emulated device has wrong deviceScaleFactor: "+n.deviceScaleFactor);n.vertical=o(e(t.screen,"vertical","object")),n.horizontal=o(e(t.screen,"horizontal","object"));const h=e(t,"modes","object",[]);if(!Array.isArray(h))throw new Error("Emulated device modes must be an array");n.modes=[];for(let t=0;t<h.length;++t){const i={};if(i.title=e(h[t],"title","string"),i.orientation=e(h[t],"orientation","string"),i.orientation!==Vertical&&i.orientation!==Horizontal)throw new Error("Emulated device mode has wrong orientation '"+i.orientation+"'");const o=n.orientationByName(i.orientation);if(i.insets=s(e(h[t],"insets","object")),i.insets.top<0||i.insets.left<0||i.insets.right<0||i.insets.bottom<0||i.insets.top+i.insets.bottom>o.height||i.insets.left+i.insets.right>o.width)throw new Error("Emulated device mode '"+i.title+"'has wrong mode insets");i.image=e(h[t],"image","string",null),n.modes.push(i)}return n._showByDefault=e(t,"show-by-default","boolean",void 0),n._show=e(t,"show","string",_Show.Default),n}catch(t){return null}}static deviceComparator(t,e){const i=t._extension&&t._extension.descriptor().order||-1,s=e._extension&&e._extension.descriptor().order||-1;return i>s?1:s>i||t.title<e.title?-1:t.title>e.title?1:0}extension(){return this._extension}setExtension(t){this._extension=t}modesForOrientation(t){const e=[];for(let i=0;i<this.modes.length;i++)this.modes[i].orientation===t&&e.push(this.modes[i]);return e}_toJSON(){const t={};t.title=this.title,t.type=this.type,t["user-agent"]=this.userAgent,t.capabilities=this.capabilities,t.screen={},t.screen["device-pixel-ratio"]=this.deviceScaleFactor,t.screen.vertical=this._orientationToJSON(this.vertical),t.screen.horizontal=this._orientationToJSON(this.horizontal),t.modes=[];for(let e=0;e<this.modes.length;++e){const i={};i.title=this.modes[e].title,i.orientation=this.modes[e].orientation,i.insets={},i.insets.left=this.modes[e].insets.left,i.insets.top=this.modes[e].insets.top,i.insets.right=this.modes[e].insets.right,i.insets.bottom=this.modes[e].insets.bottom,this.modes[e].image&&(i.image=this.modes[e].image),t.modes.push(i)}return t["show-by-default"]=this._showByDefault,t.show=this._show,t}_orientationToJSON(t){const e={};return e.width=t.width,e.height=t.height,t.outlineInsets&&(e.outline={},e.outline.insets={},e.outline.insets.left=t.outlineInsets.left,e.outline.insets.top=t.outlineInsets.top,e.outline.insets.right=t.outlineInsets.right,e.outline.insets.bottom=t.outlineInsets.bottom,e.outline.image=t.outlineImage),e}modeImage(t){return t.image?this._extension?this._extension.module().substituteURL(t.image):t.image:""}outlineImage(t){const e=this.orientationByName(t.orientation);return e.outlineImage?this._extension?this._extension.module().substituteURL(e.outlineImage):e.outlineImage:""}orientationByName(t){return t===Vertical?this.vertical:this.horizontal}show(){return this._show===_Show.Default?this._showByDefault:this._show===_Show.Always}setShow(t){this._show=t?_Show.Always:_Show.Never}copyShowFrom(t){this._show=t._show}touch(){return-1!==this.capabilities.indexOf(Capability.Touch)}mobile(){return-1!==this.capabilities.indexOf(Capability.Mobile)}}export const Horizontal="horizontal";export const Vertical="vertical";export const Type={Phone:"phone",Tablet:"tablet",Notebook:"notebook",Desktop:"desktop",Unknown:"unknown"};export const Capability={Touch:"touch",Mobile:"mobile"};export const _Show={Always:"Always",Default:"Default",Never:"Never"};let _instance;export class EmulatedDevicesList extends Common.ObjectWrapper.ObjectWrapper{constructor(){super(),this._standardSetting=Common.Settings.Settings.instance().createSetting("standardEmulatedDeviceList",[]),this._standard=new Set,this._listFromJSONV1(this._standardSetting.get(),this._standard),this._updateStandardDevices(),this._customSetting=Common.Settings.Settings.instance().createSetting("customEmulatedDeviceList",[]),this._custom=new Set,this._listFromJSONV1(this._customSetting.get(),this._custom)||this.saveCustomDevices()}static instance(){return _instance||(_instance=new EmulatedDevicesList),_instance}_updateStandardDevices(){const t=new Set,e=self.runtime.extensions("emulated-device");for(const i of e){const e=EmulatedDevice.fromJSONV1(i.descriptor().device);e.setExtension(i),t.add(e)}this._copyShowValues(this._standard,t),this._standard=t,this.saveStandardDevices()}_listFromJSONV1(t,e){if(!Array.isArray(t))return!1;let i=!0;for(let s=0;s<t.length;++s){const o=EmulatedDevice.fromJSONV1(t[s]);o?(e.add(o),o.modes.length||(o.modes.push({title:"",orientation:Horizontal,insets:new UI.Geometry.Insets(0,0,0,0),image:null}),o.modes.push({title:"",orientation:Vertical,insets:new UI.Geometry.Insets(0,0,0,0),image:null}))):i=!1}return i}standard(){return[...this._standard]}custom(){return[...this._custom]}revealCustomSetting(){Common.Revealer.reveal(this._customSetting)}addCustomDevice(t){this._custom.add(t),this.saveCustomDevices()}removeCustomDevice(t){this._custom.delete(t),this.saveCustomDevices()}saveCustomDevices(){const t=[];this._custom.forEach(e=>t.push(e._toJSON())),this._customSetting.set(t),this.dispatchEventToListeners(Events.CustomDevicesUpdated)}saveStandardDevices(){const t=[];this._standard.forEach(e=>t.push(e._toJSON())),this._standardSetting.set(t),this.dispatchEventToListeners(Events.StandardDevicesUpdated)}_copyShowValues(t,e){const i=new Map;for(const e of t)i.set(e.title,e);for(const t of e){const e=i.get(t.title);e&&t.copyShowFrom(e)}}}export const Events={CustomDevicesUpdated:Symbol("CustomDevicesUpdated"),StandardDevicesUpdated:Symbol("StandardDevicesUpdated")};export let Mode;export let Orientation;