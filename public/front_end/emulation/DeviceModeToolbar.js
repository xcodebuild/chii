import*as Common from"../common/common.js";import*as Host from"../host/host.js";import*as MobileThrottling from"../mobile_throttling/mobile_throttling.js";import*as UI from"../ui/ui.js";import{defaultMobileScaleFactor,DeviceModeModel,Type,UA}from"./DeviceModeModel.js";import{EmulatedDevice,EmulatedDevicesList,Events,Horizontal,Mode,Vertical}from"./EmulatedDevices.js";export class DeviceModeToolbar{constructor(e,t,i){this._model=e,this._showMediaInspectorSetting=t,this._showRulersSetting=i,this._deviceOutlineSetting=this._model.deviceOutlineSetting(),this._showDeviceScaleFactorSetting=Common.Settings.Settings.instance().createSetting("emulation.showDeviceScaleFactor",!1),this._showDeviceScaleFactorSetting.addChangeListener(this._updateDeviceScaleFactorVisibility,this),this._showUserAgentTypeSetting=Common.Settings.Settings.instance().createSetting("emulation.showUserAgentType",!1),this._showUserAgentTypeSetting.addChangeListener(this._updateUserAgentTypeVisibility,this),this._autoAdjustScaleSetting=Common.Settings.Settings.instance().createSetting("emulation.autoAdjustScale",!0),this._lastMode=new Map,this._element=createElementWithClass("div","device-mode-toolbar");const o=this._element.createChild("div","device-mode-toolbar-spacer");o.createChild("div","device-mode-toolbar-spacer");const s=new UI.Toolbar.Toolbar("",o);s.makeWrappable(),this._fillLeftToolbar(s);const n=new UI.Toolbar.Toolbar("",this._element);n.makeWrappable(),this._fillMainToolbar(n);const l=this._element.createChild("div","device-mode-toolbar-spacer"),a=new UI.Toolbar.Toolbar("device-mode-toolbar-fixed-size",l);a.makeWrappable(),this._fillRightToolbar(a);const d=new UI.Toolbar.Toolbar("device-mode-toolbar-fixed-size",l);d.makeWrappable(),this._fillModeToolbar(d),l.createChild("div","device-mode-toolbar-spacer");const h=new UI.Toolbar.Toolbar("device-mode-toolbar-options",l);function c(){const t=e.toolbarControlsEnabledSetting().get();s.setEnabled(t),n.setEnabled(t),a.setEnabled(t),d.setEnabled(t),h.setEnabled(t)}h.makeWrappable(),this._fillOptionsToolbar(h),this._emulatedDevicesList=EmulatedDevicesList.instance(),this._emulatedDevicesList.addEventListener(Events.CustomDevicesUpdated,this._deviceListChanged,this),this._emulatedDevicesList.addEventListener(Events.StandardDevicesUpdated,this._deviceListChanged,this),this._persistenceSetting=Common.Settings.Settings.instance().createSetting("emulation.deviceModeValue",{device:"",orientation:"",mode:""}),this._model.toolbarControlsEnabledSetting().addChangeListener(c),c()}_fillLeftToolbar(e){e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element"))),this._deviceSelectItem=new UI.Toolbar.ToolbarMenuButton(this._appendDeviceMenuItems.bind(this)),this._deviceSelectItem.setGlyph(""),this._deviceSelectItem.turnIntoSelect(),this._deviceSelectItem.setDarkText(),e.appendToolbarItem(this._deviceSelectItem)}_fillMainToolbar(e){const t=UI.UIUtils.createInput("device-mode-size-input","text");t.maxLength=4,t.title=Common.UIString.UIString("Width"),this._updateWidthInput=UI.UIUtils.bindInput(t,this._applyWidth.bind(this),DeviceModeModel.widthValidator,!0),this._widthInput=t,this._widthItem=this._wrapToolbarItem(t),e.appendToolbarItem(this._widthItem);const i=createElementWithClass("div","device-mode-x");i.textContent="Ã—",this._xItem=this._wrapToolbarItem(i),e.appendToolbarItem(this._xItem);const o=UI.UIUtils.createInput("device-mode-size-input","text");o.maxLength=4,o.title=Common.UIString.UIString("Height (leave empty for full)"),this._updateHeightInput=UI.UIUtils.bindInput(o,this._applyHeight.bind(this),(function(e){if(!e)return{valid:!0};return DeviceModeModel.heightValidator(e)}),!0),this._heightInput=o,this._heightItem=this._wrapToolbarItem(o),e.appendToolbarItem(this._heightItem)}_applyWidth(e){const t=e?Number(e):0;this._model.setWidthAndScaleToFit(t)}_applyHeight(e){const t=e?Number(e):0;this._model.setHeightAndScaleToFit(t)}_fillRightToolbar(e){e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element"))),this._scaleItem=new UI.Toolbar.ToolbarMenuButton(this._appendScaleMenuItems.bind(this)),this._scaleItem.setTitle(Common.UIString.UIString("Zoom")),this._scaleItem.setGlyph(""),this._scaleItem.turnIntoSelect(),this._scaleItem.setDarkText(),e.appendToolbarItem(this._scaleItem),e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element"))),this._deviceScaleItem=new UI.Toolbar.ToolbarMenuButton(this._appendDeviceScaleMenuItems.bind(this)),this._deviceScaleItem.setVisible(this._showDeviceScaleFactorSetting.get()),this._deviceScaleItem.setTitle(Common.UIString.UIString("Device pixel ratio")),this._deviceScaleItem.setGlyph(""),this._deviceScaleItem.turnIntoSelect(),this._deviceScaleItem.setDarkText(),e.appendToolbarItem(this._deviceScaleItem),e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element"))),this._uaItem=new UI.Toolbar.ToolbarMenuButton(this._appendUserAgentMenuItems.bind(this)),this._uaItem.setVisible(this._showUserAgentTypeSetting.get()),this._uaItem.setTitle(Common.UIString.UIString("Device type")),this._uaItem.setGlyph(""),this._uaItem.turnIntoSelect(),this._uaItem.setDarkText(),e.appendToolbarItem(this._uaItem),this._throttlingConditionsItem=MobileThrottling.ThrottlingManager.throttlingManager().createMobileThrottlingButton(),e.appendToolbarItem(this._throttlingConditionsItem)}_fillModeToolbar(e){e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element"))),this._modeButton=new UI.Toolbar.ToolbarButton("","largeicon-rotate-screen"),this._modeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click,this._modeMenuClicked,this),e.appendToolbarItem(this._modeButton)}_fillOptionsToolbar(e){e.appendToolbarItem(this._wrapToolbarItem(createElementWithClass("div","device-mode-empty-toolbar-element")));const t=new UI.Toolbar.ToolbarMenuButton(this._appendOptionsMenuItems.bind(this));t.setTitle(Common.UIString.UIString("More options")),e.appendToolbarItem(t)}_appendScaleMenuItems(e){this._model.type()===Type.Device&&e.footerSection().appendItem(Common.UIString.UIString("Fit to window (%.0f%%)",100*this._model.fitScale()),this._onScaleMenuChanged.bind(this,this._model.fitScale()),!1),e.footerSection().appendCheckboxItem(ls`Auto-adjust zoom`,this._onAutoAdjustScaleChanged.bind(this),this._autoAdjustScaleSetting.get());const t=function(t,i){e.defaultSection().appendCheckboxItem(t,this._onScaleMenuChanged.bind(this,i),this._model.scaleSetting().get()===i,!1)}.bind(this);t(Common.UIString.UIString("50%"),.5),t(Common.UIString.UIString("75%"),.75),t(Common.UIString.UIString("100%"),1),t(Common.UIString.UIString("125%"),1.25),t(Common.UIString.UIString("150%"),1.5)}_onScaleMenuChanged(e){this._model.scaleSetting().set(e)}_onAutoAdjustScaleChanged(){this._autoAdjustScaleSetting.set(!this._autoAdjustScaleSetting.get())}_appendDeviceScaleMenuItems(e){const t=this._model.deviceScaleFactorSetting(),i=this._model.uaSetting().get()===UA.Mobile||this._model.uaSetting().get()===UA.MobileNoTouch?defaultMobileScaleFactor:window.devicePixelRatio;function o(e,i,o){e.appendCheckboxItem(i,t.set.bind(t,o),t.get()===o)}o(e.headerSection(),Common.UIString.UIString("Default: %.1f",i),0),o(e.defaultSection(),Common.UIString.UIString("1"),1),o(e.defaultSection(),Common.UIString.UIString("2"),2),o(e.defaultSection(),Common.UIString.UIString("3"),3)}_appendUserAgentMenuItems(e){const t=this._model.uaSetting();function i(i,o){e.defaultSection().appendCheckboxItem(i,t.set.bind(t,o),t.get()===o)}i(UA.Mobile,UA.Mobile),i(UA.MobileNoTouch,UA.MobileNoTouch),i(UA.Desktop,UA.Desktop),i(UA.DesktopTouch,UA.DesktopTouch)}_appendOptionsMenuItems(e){const t=this._model;function i(e,i,o,s,n){void 0===n&&(n=t.type()===Type.None),e.appendItem(i.get()?o:s,i.set.bind(i,!i.get()),n)}i(e.headerSection(),this._deviceOutlineSetting,Common.UIString.UIString("Hide device frame"),Common.UIString.UIString("Show device frame"),t.type()!==Type.Device),i(e.headerSection(),this._showMediaInspectorSetting,Common.UIString.UIString("Hide media queries"),Common.UIString.UIString("Show media queries")),i(e.headerSection(),this._showRulersSetting,Common.UIString.UIString("Hide rulers"),Common.UIString.UIString("Show rulers")),i(e.defaultSection(),this._showDeviceScaleFactorSetting,Common.UIString.UIString("Remove device pixel ratio"),Common.UIString.UIString("Add device pixel ratio")),i(e.defaultSection(),this._showUserAgentTypeSetting,Common.UIString.UIString("Remove device type"),Common.UIString.UIString("Add device type")),e.appendItemsAtLocation("deviceModeMenu"),e.footerSection().appendItem(Common.UIString.UIString("Reset to defaults"),this._reset.bind(this)),e.footerSection().appendItem(ls`Close DevTools`,Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(Host.InspectorFrontendHost.InspectorFrontendHostInstance))}_reset(){this._deviceOutlineSetting.set(!1),this._showDeviceScaleFactorSetting.set(!1),this._showUserAgentTypeSetting.set(!1),this._showMediaInspectorSetting.set(!1),this._showRulersSetting.set(!1),this._model.reset()}_wrapToolbarItem(e){const t=createElement("div");return UI.Utils.createShadowRootWithCoreStyles(t,"emulation/deviceModeToolbar.css").appendChild(e),new UI.Toolbar.ToolbarItem(t)}_emulateDevice(e){const t=this._autoAdjustScaleSetting.get()?void 0:this._model.scaleSetting().get();this._model.emulate(Type.Device,e,this._lastMode.get(e)||e.modes[0],t)}_switchToResponsive(){this._model.emulate(Type.Responsive,null,null)}_filterDevices(e){return(e=e.filter((function(e){return e.show()}))).sort(EmulatedDevice.deviceComparator),e}_standardDevices(){return this._filterDevices(this._emulatedDevicesList.standard())}_customDevices(){return this._filterDevices(this._emulatedDevicesList.custom())}_allDevices(){return this._standardDevices().concat(this._customDevices())}_appendDeviceMenuItems(e){function t(t){if(!t.length)return;const i=e.section();for(const e of t)i.appendCheckboxItem(e.title,this._emulateDevice.bind(this,e),this._model.device()===e,!1)}e.headerSection().appendCheckboxItem(Common.UIString.UIString("Responsive"),this._switchToResponsive.bind(this),this._model.type()===Type.Responsive,!1),t.call(this,this._standardDevices()),t.call(this,this._customDevices()),e.footerSection().appendItem(Common.UIString.UIString("Editâ€¦"),this._emulatedDevicesList.revealCustomSetting.bind(this._emulatedDevicesList),!1)}_deviceListChanged(){const e=this._model.device();if(!e)return;const t=this._allDevices();-1===t.indexOf(e)&&(t.length?this._emulateDevice(t[0]):this._model.emulate(Type.Responsive,null,null))}_updateDeviceScaleFactorVisibility(){this._deviceScaleItem.setVisible(this._showDeviceScaleFactorSetting.get())}_updateUserAgentTypeVisibility(){this._uaItem.setVisible(this._showUserAgentTypeSetting.get())}_modeMenuClicked(e){const t=this._model.device(),i=this._model,o=this._autoAdjustScaleSetting;if(i.type()===Type.Responsive){const e=i.appliedDeviceSize();return void(o.get()?i.setSizeAndScaleToFit(e.height,e.width):(i.setWidth(e.height),i.setHeight(e.width)))}if(2===t.modes.length&&t.modes[0].orientation!==t.modes[1].orientation){const e=o.get()?void 0:i.scaleSetting().get();return void i.emulate(i.type(),i.device(),i.mode()===t.modes[0]?t.modes[1]:t.modes[0],e)}const s=new UI.ContextMenu.ContextMenu(e.data,!1,this._modeButton.element.totalOffsetLeft(),this._modeButton.element.totalOffsetTop()+this._modeButton.element.offsetHeight);function n(e,i){const o=t.modesForOrientation(e);if(o.length)if(1===o.length)l(o[0],i);else for(let e=0;e<o.length;e++)l(o[e],i+" â€“ "+o[e].title)}function l(e,t){s.defaultSection().appendCheckboxItem(t,a.bind(null,e),i.mode()===e,!1)}function a(e){const t=o.get()?void 0:i.scaleSetting().get();i.emulate(i.type(),i.device(),e,t)}n(Vertical,Common.UIString.UIString("Portrait")),n(Horizontal,Common.UIString.UIString("Landscape")),s.show()}element(){return this._element}update(){this._model.type()!==this._cachedModelType&&(this._cachedModelType=this._model.type(),this._widthInput.disabled=this._model.type()!==Type.Responsive,this._heightInput.disabled=this._model.type()!==Type.Responsive,this._deviceScaleItem.setEnabled(this._model.type()===Type.Responsive),this._uaItem.setEnabled(this._model.type()===Type.Responsive),this._model.type()===Type.Responsive?(this._modeButton.setEnabled(!0),this._modeButton.setTitle(ls`Rotate`)):this._modeButton.setEnabled(!1));const e=this._model.appliedDeviceSize();this._updateHeightInput(this._model.type()===Type.Responsive&&this._model.isFullHeight()?"":String(e.height)),this._updateWidthInput(String(e.width)),this._heightInput.placeholder=e.height,this._model.scale()!==this._cachedScale&&(this._scaleItem.setText(Common.UIString.UIString("%.0f%%",100*this._model.scale())),this._cachedScale=this._model.scale());const t=this._model.appliedDeviceScaleFactor();t!==this._cachedDeviceScale&&(this._deviceScaleItem.setText(Common.UIString.UIString("DPR: %.1f",t)),this._cachedDeviceScale=t);const i=this._model.appliedUserAgentType();i!==this._cachedUaType&&(this._uaItem.setText(i),this._cachedUaType=i);let o=Common.UIString.UIString("None");if(this._model.type()===Type.Responsive&&(o=Common.UIString.UIString("Responsive")),this._model.type()===Type.Device&&(o=this._model.device().title),this._deviceSelectItem.setText(o),this._model.device()!==this._cachedModelDevice){const e=this._model.device();if(e){const t=e?e.modes.length:0;this._modeButton.setEnabled(t>=2),this._modeButton.setTitle(2===t?Common.UIString.UIString("Rotate"):Common.UIString.UIString("Screen options"))}this._cachedModelDevice=e}if(this._model.type()===Type.Device&&this._lastMode.set(this._model.device(),this._model.mode()),this._model.mode()!==this._cachedModelMode&&this._model.type()!==Type.None){this._cachedModelMode=this._model.mode();const e=this._persistenceSetting.get();this._model.device()?(e.device=this._model.device().title,e.orientation=this._model.mode()?this._model.mode().orientation:"",e.mode=this._model.mode()?this._model.mode().title:""):(e.device="",e.orientation="",e.mode=""),this._persistenceSetting.set(e)}}restore(){for(const e of this._allDevices())if(e.title===this._persistenceSetting.get().device)for(const t of e.modes)if(t.orientation===this._persistenceSetting.get().orientation&&t.title===this._persistenceSetting.get().mode)return this._lastMode.set(e,t),void this._emulateDevice(e);this._model.emulate(Type.Responsive,null,null)}}