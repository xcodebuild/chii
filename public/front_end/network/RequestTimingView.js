import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{Events,NetworkTimeCalculator}from"./NetworkTimeCalculator.js";export class RequestTimingView extends UI.Widget.VBox{constructor(e,t){super(),this.element.classList.add("resource-timing-view"),this._request=e,this._calculator=t}static _timeRangeTitle(e){switch(e){case RequestTimeRangeNames.Push:return Common.UIString.UIString("Receiving Push");case RequestTimeRangeNames.Queueing:return Common.UIString.UIString("Queueing");case RequestTimeRangeNames.Blocking:return Common.UIString.UIString("Stalled");case RequestTimeRangeNames.Connecting:return Common.UIString.UIString("Initial connection");case RequestTimeRangeNames.DNS:return Common.UIString.UIString("DNS Lookup");case RequestTimeRangeNames.Proxy:return Common.UIString.UIString("Proxy negotiation");case RequestTimeRangeNames.ReceivingPush:return Common.UIString.UIString("Reading Push");case RequestTimeRangeNames.Receiving:return Common.UIString.UIString("Content Download");case RequestTimeRangeNames.Sending:return Common.UIString.UIString("Request sent");case RequestTimeRangeNames.ServiceWorker:return Common.UIString.UIString("Request to ServiceWorker");case RequestTimeRangeNames.ServiceWorkerPreparation:return Common.UIString.UIString("ServiceWorker Preparation");case RequestTimeRangeNames.SSL:return Common.UIString.UIString("SSL");case RequestTimeRangeNames.Total:return Common.UIString.UIString("Total");case RequestTimeRangeNames.Waiting:return Common.UIString.UIString("Waiting (TTFB)");default:return Common.UIString.UIString(e)}}static calculateRequestTimeRanges(e,t){const n=[];function i(e,t,i){t<Number.MAX_VALUE&&t<=i&&n.push({name:e,start:t,end:i})}function r(e){for(let t=0;t<e.length;++t)if(e[t]>0)return e[t]}function s(e,t,n){t>=0&&n>=0&&i(e,m+t/1e3,m+n/1e3)}const a=e.timing;if(!a){const t=-1!==e.issueTime()?e.issueTime():-1!==e.startTime?e.startTime:0,r=-1===e.responseReceivedTime?Number.MAX_VALUE:e.responseReceivedTime,s=-1===e.endTime?Number.MAX_VALUE:e.endTime;return i(RequestTimeRangeNames.Total,t,s),i(RequestTimeRangeNames.Blocking,t,r),i(RequestTimeRangeNames.Receiving,r,s),n}const o=e.issueTime(),m=a.requestTime,c=r([e.endTime,e.responseReceivedTime])||m;if(i(RequestTimeRangeNames.Total,o<m?o:m,c),a.pushStart){const e=a.pushEnd||c;e>t&&i(RequestTimeRangeNames.Push,Math.max(a.pushStart,t),e)}o<m&&i(RequestTimeRangeNames.Queueing,o,m);const l=1e3*(e.responseReceivedTime-m);if(e.fetchedViaServiceWorker)s(RequestTimeRangeNames.Blocking,0,a.workerStart),s(RequestTimeRangeNames.ServiceWorkerPreparation,a.workerStart,a.workerReady),s(RequestTimeRangeNames.ServiceWorker,a.workerReady,a.sendEnd),s(RequestTimeRangeNames.Waiting,a.sendEnd,l);else if(!a.pushStart){const e=r([a.dnsStart,a.connectStart,a.sendStart,l])||0;s(RequestTimeRangeNames.Blocking,0,e),s(RequestTimeRangeNames.Proxy,a.proxyStart,a.proxyEnd),s(RequestTimeRangeNames.DNS,a.dnsStart,a.dnsEnd),s(RequestTimeRangeNames.Connecting,a.connectStart,a.connectEnd),s(RequestTimeRangeNames.SSL,a.sslStart,a.sslEnd),s(RequestTimeRangeNames.Sending,a.sendStart,a.sendEnd),s(RequestTimeRangeNames.Waiting,Math.max(a.sendEnd,a.connectEnd,a.dnsEnd,a.proxyEnd,e),l)}return-1!==e.endTime&&i(a.pushStart?RequestTimeRangeNames.ReceivingPush:RequestTimeRangeNames.Receiving,e.responseReceivedTime,c),n}static createTimingTable(e,t){const n=createElementWithClass("table","network-timing-table");UI.Utils.appendStyle(n,"network/networkTimingTable.css");const i=n.createChild("colgroup");i.createChild("col","labels"),i.createChild("col","bars"),i.createChild("col","duration");const r=RequestTimingView.calculateRequestTimeRanges(e,t.minimumBoundary()),s=r.map(e=>e.start).reduce((e,t)=>Math.min(e,t)),a=r.map(e=>e.end).reduce((e,t)=>Math.max(e,t)),o=100/(a-s);let m,c,l,d=0;const g=n.createChild("thead","network-timing-start"),u=g.createChild("tr"),h=u.createChild("th");h.createChild("span","network-timing-hidden-header").textContent=ls`Label`,h.scope="col";const R=u.createChild("th");R.createChild("span","network-timing-hidden-header").textContent=ls`Waterfall`,R.scope="col";const C=u.createChild("th");C.createChild("span","network-timing-hidden-header").textContent=ls`Duration`,C.scope="col";const S=g.createChild("tr").createChild("td"),T=g.createChild("tr").createChild("td");let p;S.colSpan=T.colSpan=3,S.createTextChild(Common.UIString.UIString("Queued at %s",t.formatValue(e.issueTime(),2))),T.createTextChild(Common.UIString.UIString("Started at %s",t.formatValue(e.startTime,2)));for(let e=0;e<r.length;++e){const i=r[e],g=i.name;if(g===RequestTimeRangeNames.Total){d=i.end-i.start;continue}g===RequestTimeRangeNames.Push?f(Common.UIString.UIString("Server Push")):g===RequestTimeRangeNames.Queueing?l||(l=f(ls`Resource Scheduling`)):ConnectionSetupRangeNames.has(g)?m||(m=f(Common.UIString.UIString("Connection Start"))):c||(c=f(Common.UIString.UIString("Request/Response")));const u=o*(i.start-s);p=o*(a-i.end);const h=i.end-i.start,R=n.createChild("tr");R.createChild("td").createTextChild(RequestTimingView._timeRangeTitle(g));const C=R.createChild("td").createChild("div","network-timing-row"),S=C.createChild("span","network-timing-bar "+g);S.style.left=u+"%",S.style.right=p+"%",S.textContent="​",UI.ARIAUtils.setAccessibleName(C,ls`Started at ${t.formatValue(i.start,2)}`);R.createChild("td").createChild("div","network-timing-bar-title").textContent=Number.secondsToString(h,!0)}if(!e.finished){const e=n.createChild("tr").createChild("td","caution");e.colSpan=3,e.createTextChild(Common.UIString.UIString("CAUTION: request is not finished yet!"))}const U=n.createChild("tr","network-timing-footer"),q=U.createChild("td");q.colSpan=1,q.appendChild(UI.UIUtils.createDocumentationLink("network-performance/reference#timing-explanation",Common.UIString.UIString("Explanation"))),U.createChild("td"),U.createChild("td").createTextChild(Number.secondsToString(d,!0));const I=e.serverTimings,N=void 0===p?100:p,v=n.createChild("tr","network-timing-table-header").createChild("td");v.colSpan=3,v.createChild("hr","break");const k=n.createChild("tr","network-timing-table-header");if(k.createChild("td").createTextChild(Common.UIString.UIString("Server Timing")),k.createChild("td"),k.createChild("td").createTextChild(Common.UIString.UIString("TIME")),!I){const e=n.createChild("tr").createChild("td");e.colSpan=3;const t=UI.XLink.XLink.create("https://web.dev/custom-metrics/#server-timing-api",ls`the Server Timing API`);return e.appendChild(UI.UIUtils.formatLocalized("During development, you can use %s to add insights into the server-side timing of this request.",[t])),n}return I.filter(e=>"total"!==e.metric.toLowerCase()).forEach(e=>w(e,N)),I.filter(e=>"total"===e.metric.toLowerCase()).forEach(e=>w(e,N)),n;function w(e,t){const i=new Common.Color.Generator({min:0,max:360,count:36},{min:50,max:80},80),r="total"===e.metric.toLowerCase(),m=n.createChild("tr",r?"network-timing-footer":""),c=m.createChild("td","network-timing-metric"),l=e.description||e.metric;c.createTextChild(l),c.title=l;const d=m.createChild("td").createChild("div","network-timing-row");if(null===e.value)return;const g=o*(a-s-e.value/1e3);if(g>=0){const n=d.createChild("span","network-timing-bar server-timing");n.style.left=g+"%",n.style.right=t+"%",n.textContent="​",r||(n.style.backgroundColor=i.colorForID(e.metric))}m.createChild("td").createChild("div","network-timing-bar-title").textContent=Number.millisToString(e.value,!0)}function f(e){const t=n.createChild("tr","network-timing-table-header"),i=t.createChild("td");return i.createTextChild(e),UI.ARIAUtils.markAsHeading(i,2),t.createChild("td").createTextChild(""),t.createChild("td").createTextChild(ls`DURATION`),t}}wasShown(){this._request.addEventListener(SDK.NetworkRequest.Events.TimingChanged,this._refresh,this),this._request.addEventListener(SDK.NetworkRequest.Events.FinishedLoading,this._refresh,this),this._calculator.addEventListener(Events.BoundariesChanged,this._refresh,this),this._refresh()}willHide(){this._request.removeEventListener(SDK.NetworkRequest.Events.TimingChanged,this._refresh,this),this._request.removeEventListener(SDK.NetworkRequest.Events.FinishedLoading,this._refresh,this),this._calculator.removeEventListener(Events.BoundariesChanged,this._refresh,this)}_refresh(){this._tableElement&&this._tableElement.remove(),this._tableElement=RequestTimingView.createTimingTable(this._request,this._calculator),this._tableElement.classList.add("resource-timing-table"),this.element.appendChild(this._tableElement)}}export const RequestTimeRangeNames={Push:"push",Queueing:"queueing",Blocking:"blocking",Connecting:"connecting",DNS:"dns",Proxy:"proxy",Receiving:"receiving",ReceivingPush:"receiving-push",Sending:"sending",ServiceWorker:"serviceworker",ServiceWorkerPreparation:"serviceworker-preparation",SSL:"ssl",Total:"total",Waiting:"waiting"};export const ConnectionSetupRangeNames=new Set([RequestTimeRangeNames.Queueing,RequestTimeRangeNames.Blocking,RequestTimeRangeNames.Connecting,RequestTimeRangeNames.DNS,RequestTimeRangeNames.Proxy,RequestTimeRangeNames.SSL]);export let RequestTimeRange;