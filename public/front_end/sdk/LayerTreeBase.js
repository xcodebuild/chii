import{DOMModel,DOMNode}from"./DOMModel.js";import{SnapshotWithRect}from"./PaintProfiler.js";import{Target}from"./SDKModel.js";export class Layer{id(){}parentId(){}parent(){}isRoot(){}children(){}addChild(t){}node(){}nodeForSelfOrAncestor(){}offsetX(){}offsetY(){}width(){}height(){}transform(){}quad(){}anchorPoint(){}invisible(){}paintCount(){}lastPaintRect(){}scrollRects(){}stickyPositionConstraint(){}gpuMemoryUsage(){}requestCompositingReasonIds(){}drawsContent(){}snapshots(){}}Layer.ScrollRectType={NonFastScrollable:"NonFastScrollable",TouchEventHandler:"TouchEventHandler",WheelEventHandler:"WheelEventHandler",RepaintsOnScroll:"RepaintsOnScroll",MainThreadScrollingReason:"MainThreadScrollingReason"};export class StickyPositionConstraint{constructor(t,e){this._stickyBoxRect=e.stickyBoxRect,this._containingBlockRect=e.containingBlockRect,this._nearestLayerShiftingStickyBox=null,t&&e.nearestLayerShiftingStickyBox&&(this._nearestLayerShiftingStickyBox=t.layerById(e.nearestLayerShiftingStickyBox)),this._nearestLayerShiftingContainingBlock=null,t&&e.nearestLayerShiftingContainingBlock&&(this._nearestLayerShiftingContainingBlock=t.layerById(e.nearestLayerShiftingContainingBlock))}stickyBoxRect(){return this._stickyBoxRect}containingBlockRect(){return this._containingBlockRect}nearestLayerShiftingStickyBox(){return this._nearestLayerShiftingStickyBox}nearestLayerShiftingContainingBlock(){return this._nearestLayerShiftingContainingBlock}}export class LayerTreeBase{constructor(t){this._target=t,this._domModel=t?t.model(DOMModel):null,this._layersById={},this._root=null,this._contentRoot=null,this._backendNodeIdToNode=new Map}target(){return this._target}root(){return this._root}setRoot(t){this._root=t}contentRoot(){return this._contentRoot}setContentRoot(t){this._contentRoot=t}forEachLayer(t,e){return!(!e&&!(e=this.root()))&&(t(e)||e.children().some(this.forEachLayer.bind(this,t)))}layerById(t){return this._layersById[t]||null}async resolveBackendNodeIds(t){if(!t.size||!this._domModel)return;const e=await this._domModel.pushNodesByBackendIdsToFrontend(t);if(e)for(const t of e.keys())this._backendNodeIdToNode.set(t,e.get(t)||null)}backendNodeIdToNode(){return this._backendNodeIdToNode}setViewportSize(t){this._viewportSize=t}viewportSize(){return this._viewportSize}_nodeForId(t){return this._domModel?this._domModel.nodeForId(t):null}}