import{Capability,SDKModel,Target}from"./SDKModel.js";export class PaintProfilerModel extends SDKModel{constructor(e){super(e),this._layerTreeAgent=e.layerTreeAgent()}async loadSnapshotFromFragments(e){const t=await this._layerTreeAgent.loadSnapshot(e);return t&&new PaintProfilerSnapshot(this,t)}loadSnapshot(e){const t={x:0,y:0,picture:e};return this.loadSnapshotFromFragments([t])}async makeSnapshot(e){const t=await this._layerTreeAgent.makeSnapshot(e);return t&&new PaintProfilerSnapshot(this,t)}}export class PaintProfilerSnapshot{constructor(e,t){this._paintProfilerModel=e,this._id=t,this._refCount=1}release(){console.assert(this._refCount>0,"release is already called on the object"),--this._refCount||this._paintProfilerModel._layerTreeAgent.releaseSnapshot(this._id)}addReference(){++this._refCount,console.assert(this._refCount>0,"Referencing a dead object")}replay(e,t,r){return this._paintProfilerModel._layerTreeAgent.replaySnapshot(this._id,t,r,e||1)}profile(e){return this._paintProfilerModel._layerTreeAgent.profileSnapshot(this._id,5,1,e||void 0)}async commandLog(){const e=await this._paintProfilerModel._layerTreeAgent.snapshotCommandLog(this._id);return e&&e.map((e,t)=>new PaintProfilerLogItem(e,t))}}export class PaintProfilerLogItem{constructor(e,t){this.method=e.method,this.params=e.params,this.commandIndex=t}}SDKModel.register(PaintProfilerModel,Capability.DOM,!1);export let SnapshotWithRect;export let PictureFragment;export let RawPaintProfilerLogItem;