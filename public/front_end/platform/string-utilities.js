export const escapeCharacters=(t,e)=>{let n=!1;for(let r=0;r<e.length;++r)if(-1!==t.indexOf(e.charAt(r))){n=!0;break}if(!n)return String(t);let r="";for(let n=0;n<t.length;++n)-1!==e.indexOf(t.charAt(n))&&(r+="\\"),r+=t.charAt(n);return r};export const tokenizeFormatString=function(t,e){const n=[];function r(t){t&&(n.length&&"string"===n[n.length-1].type?n[n.length-1].value+=t:n.push({type:"string",value:t}))}function o(t,e,r){n.push({type:"specifier",specifier:t,precision:e,substitutionIndex:r})}function i(t){const e=["black","red","green","yellow","blue","magenta","cyan","lightGray","","default"],r=["darkGray","lightRed","lightGreen","lightYellow","lightBlue","lightMagenta","lightCyan","white",""],o={color:e,colorLight:r,bgColor:e,bgColorLight:r},i={3:"color",9:"colorLight",4:"bgColor",10:"bgColorLight"}[Math.floor(t/10)];if(!i)return;const s=o[i][t%10];s&&n.push({type:"specifier",specifier:"c",value:{description:(i.startsWith("bg")?"background : ":"color: ")+s}})}let s=0,c=0;const u=new RegExp(`%%|%(?:(\\d+)\\$)?(?:\\.(\\d*))?([${Object.keys(e).join("")}])|\\u001b\\[(\\d+)m`,"g");for(let e=u.exec(t);e;e=u.exec(t)){const n=e.index;if(n>s&&r(t.substring(s,n)),"%%"===e[0])r("%");else if(e[0].startsWith("%")){const[t,n,r,i]=e;n&&Number(n)>0&&(c=Number(n)-1);o(i,r?Number(r):-1,c),++c}else{i(Number(e[4]))}s=n+e[0].length}return r(t.substring(s)),n};export const format=function(t,e,n,r,o,i){if(!t||(!e||!e.length)&&-1===t.search(/\u001b\[(\d+)m/))return{formattedResult:o(r,t),unusedSubstitutions:e};function s(){return'String.format("'+t+'", "'+Array.prototype.join.call(e,'", "')+'")'}function c(t){console.error(s()+": "+t)}let u=r;const l=i||tokenizeFormatString(t,n),a={};for(let t=0;t<l.length;++t){const r=l[t];"string"!==r.type?"specifier"===r.type?!r.value&&r.substitutionIndex>=e.length?(c("not enough substitution arguments. Had "+e.length+" but needed "+(r.substitutionIndex+1)+", so substitution was skipped."),u=o(u,"%"+(r.precision>-1?r.precision:"")+r.specifier)):(r.value||(a[r.substitutionIndex]=!0),r.specifier in n?u=o(u,n[r.specifier](r.value||e[r.substitutionIndex],r)):(f="unsupported format character “"+r.specifier+"”. Treating as a string.",console.warn(s()+": "+f),u=o(u,r.value?"":e[r.substitutionIndex]))):c('Unknown token type "'+r.type+'" found.'):u=o(u,r.value)}var f;const p=[];for(let t=0;t<e.length;++t)t in a||p.push(e[t]);return{formattedResult:u,unusedSubstitutions:p}};export const standardFormatters={d:function(t){return isNaN(t)?0:t},f:function(t,e){return t&&e.precision>-1&&(t=t.toFixed(e.precision)),isNaN(t)?e.precision>-1?Number(0).toFixed(e.precision):0:t},s:function(t){return t}};export const vsprintf=function(t,e){return format(t,e,standardFormatters,"",(function(t,e){return t+e})).formattedResult};export const sprintf=function(t,e){return vsprintf(t,Array.prototype.slice.call(arguments,1))};export const toBase64=t=>{function e(t){return t<26?t+65:t<52?t+71:t<62?t-4:62===t?43:63===t?47:65}const n=(new TextEncoder).encode(t.toString()),r=n.length;let o,i="";if(0===r)return i;let s=0;for(let t=0;t<r;t++)o=t%3,s|=n[t]<<(16>>>o&24),2===o&&(i+=String.fromCharCode(e(s>>>18&63),e(s>>>12&63),e(s>>>6&63),e(63&s)),s=0);return 0===o?i+=String.fromCharCode(e(s>>>18&63),e(s>>>12&63),61,61):1===o&&(i+=String.fromCharCode(e(s>>>18&63),e(s>>>12&63),e(s>>>6&63),61)),i};export const findIndexesOfSubString=(t,e)=>{const n=[];let r=t.indexOf(e);for(;-1!==r;)n.push(r),r=t.indexOf(e,r+e.length);return n};export const findLineEndingIndexes=t=>{const e=findIndexesOfSubString(t,"\n");return e.push(t.length),e};export const isWhitespace=t=>/^\s*$/.test(t);export const trimURL=(t,e)=>{let n=t.replace(/^(https|http|file):\/\//i,"");return e&&n.toLowerCase().startsWith(e.toLowerCase())&&(n=n.substr(e.length)),n};export const collapseWhitespace=t=>t.replace(/[\s\xA0]+/g," ");export const reverse=t=>t.split("").reverse().join("");export const replaceControlCharacters=t=>t.replace(/[\0-\x08\x0B\f\x0E-\x1F\x80-\x9F]/g,"�");export const countWtf8Bytes=t=>{let e=0;for(let n=0;n<t.length;n++){const r=t.charCodeAt(n);if(r<=127)e++;else if(r<=2047)e+=2;else if(r<55296||57343<r)e+=3;else{if(r<=56319&&n+1<t.length){const r=t.charCodeAt(n+1);if(56320<=r&&r<=57343){e+=4,n++;continue}}e+=3}}return e};export const stripLineBreaks=t=>t.replace(/(\r)?\n/g,"");