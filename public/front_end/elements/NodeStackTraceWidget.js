import*as Components from"../components/components.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class NodeStackTraceWidget extends UI.ThrottledWidget.ThrottledWidget{constructor(){super(!0),this.registerRequiredCSS("elements/nodeStackTraceWidget.css"),this._noStackTraceElement=this.contentElement.createChild("div","gray-info-message"),this._noStackTraceElement.textContent=ls`No stack trace available`,this._creationStackTraceElement=this.contentElement.createChild("div","stack-trace"),this._linkifier=new Components.Linkifier.Linkifier(MaxLengthForLinks)}wasShown(){self.UI.context.addFlavorChangeListener(SDK.DOMModel.DOMNode,this.update,this),this.update()}willHide(){self.UI.context.removeFlavorChangeListener(SDK.DOMModel.DOMNode,this.update,this)}async doUpdate(){const e=self.UI.context.flavor(SDK.DOMModel.DOMNode);if(!e)return this._noStackTraceElement.classList.remove("hidden"),void this._creationStackTraceElement.classList.add("hidden");const t=await e.creationStackTrace();if(t){this._noStackTraceElement.classList.add("hidden"),this._creationStackTraceElement.classList.remove("hidden");const i=Components.JSPresentationUtils.buildStackTracePreviewContents(e.domModel().target(),this._linkifier,{stackTrace:t});this._creationStackTraceElement.removeChildren(),this._creationStackTraceElement.appendChild(i.element)}else this._noStackTraceElement.classList.remove("hidden"),this._creationStackTraceElement.classList.add("hidden")}}export const MaxLengthForLinks=40;