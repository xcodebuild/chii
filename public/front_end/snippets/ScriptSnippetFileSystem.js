import*as Common from"../common/common.js";import*as Persistence from"../persistence/persistence.js";import*as SDK from"../sdk/sdk.js";import*as TextUtils from"../text_utils/text_utils.js";import*as Workspace from"../workspace/workspace.js";class SnippetFileSystem extends Persistence.PlatformFileSystem.PlatformFileSystem{constructor(){super("snippet://","snippets"),this._lastSnippetIdentifierSetting=Common.Settings.Settings.instance().createSetting("scriptSnippets_lastIdentifier",0),this._snippetsSetting=Common.Settings.Settings.instance().createSetting("scriptSnippets",[])}initialFilePaths(){return this._snippetsSetting.get().map(e=>escape(e.name))}async createFile(e,t){const s=this._lastSnippetIdentifierSetting.get()+1;this._lastSnippetIdentifierSetting.set(s);const n=ls`Script snippet #${s}`,i=this._snippetsSetting.get();return i.push({name:n,content:""}),this._snippetsSetting.set(i),escape(n)}async deleteFile(e){const t=unescape(e.substring(1)),s=this._snippetsSetting.get(),n=s.filter(e=>e.name!==t);return s.length!==n.length&&(this._snippetsSetting.set(n),!0)}async requestFileContent(e){const t=unescape(e.substring(1)),s=this._snippetsSetting.get().find(e=>e.name===t);return{content:s?s.content:null,isEncoded:!1}}async setFileContent(e,t,s){const n=unescape(e.substring(1)),i=this._snippetsSetting.get(),o=i.find(e=>e.name===n);return!!o&&(o.content=t,this._snippetsSetting.set(i),!0)}renameFile(e,t,s){const n=unescape(e.substring(1)),i=this._snippetsSetting.get(),o=i.find(e=>e.name===n);t=t.trim(),o&&0!==t.length&&!i.find(e=>e.name===t)?(o.name=t,this._snippetsSetting.set(i),s(!0,t)):s(!1)}async searchInPath(e,t){const s=new RegExp(e.escapeForRegExp(),"i");return this._snippetsSetting.get().filter(e=>e.content.match(s)).map(e=>escape(e.name))}mimeFromPath(e){return"text/javascript"}contentType(e){return Common.ResourceType.resourceTypes.Script}tooltipForURL(e){return ls`Linked to ${unescape(e.substring(this.path().length))}`}supportsAutomapping(){return!0}}export async function evaluateScriptSnippet(e){if(!e.url().startsWith("snippet://"))return;const t=self.UI.context.flavor(SDK.RuntimeModel.ExecutionContext);if(!t)return;const s=t.runtimeModel;await e.requestContent(),e.commitWorkingCopy();const n=e.workingCopy();Common.Console.Console.instance().show();const i=e.url(),o=await t.evaluate({expression:`${n}\n//# sourceURL=${i}`,objectGroup:"console",silent:!1,includeCommandLineAPI:!0,returnByValue:!1,generatePreview:!0,replMode:!0},!1,!0);if(o.exceptionDetails)return void SDK.ConsoleModel.ConsoleModel.instance().addMessage(SDK.ConsoleModel.ConsoleMessage.fromException(s,o.exceptionDetails,void 0,void 0,i));if(!o.object)return;const r=t.debuggerModel.scriptsForSourceURL(i),p=r[r.length-1].scriptId;SDK.ConsoleModel.ConsoleModel.instance().addMessage(new SDK.ConsoleModel.ConsoleMessage(s,SDK.ConsoleModel.MessageSource.JS,SDK.ConsoleModel.MessageLevel.Info,"",SDK.ConsoleModel.MessageType.Result,i,void 0,void 0,[o.object],void 0,void 0,t.id,p))}export function isSnippetsUISourceCode(e){return e.url().startsWith("snippet://")}export function isSnippetsProject(e){return e.type()===Workspace.Workspace.projectTypes.FileSystem&&"snippets"===Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(e)}Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addPlatformFileSystem("snippet://",new SnippetFileSystem);