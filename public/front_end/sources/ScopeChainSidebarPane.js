import*as Common from"../common/common.js";import*as Components from"../components/components.js";import*as ObjectUI from"../object_ui/object_ui.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";import{resolveScopeInObject,resolveThisObject}from"./SourceMapNamesResolver.js";export class ScopeChainSidebarPaneBase extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("sources/scopeChainSidebarPane.css"),this._treeOutline=new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline,this._treeOutline.registerRequiredCSS("sources/scopeChainSidebarPane.css"),this._treeOutline.setShowSelectionOnKeyboardFocus(!0),this._expandController=new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController(this._treeOutline),this._linkifier=new Components.Linkifier.Linkifier,this._infoElement=createElement("div"),this._infoElement.className="gray-info-message",this._infoElement.textContent=ls`Not paused`,this._infoElement.tabIndex=-1,this._update()}flavorChanged(e){this._update()}focus(){this.hasFocus()||self.UI.context.flavor(SDK.DebuggerModel.DebuggerPausedDetails)&&this._treeOutline.forceSelect()}_getScopeChain(e){return[]}_update(){const e=self.UI.context.flavor(SDK.DebuggerModel.CallFrame),t=self.UI.context.flavor(SDK.DebuggerModel.DebuggerPausedDetails);this._linkifier.reset(),resolveThisObject(e).then(this._innerUpdate.bind(this,t,e))}_innerUpdate(e,t,o){if(this._treeOutline.removeChildren(),this.contentElement.removeChildren(),!e||!t)return void this.contentElement.appendChild(this._infoElement);this.contentElement.appendChild(this._treeOutline.element);let i=!1;const n=this._getScopeChain(t);if(n)for(let r=0;r<n.length;++r){const s=n[r],c=this._extraPropertiesForScope(s,e,t,o,0===r);s.type()===Protocol.Debugger.ScopeType.Local&&(i=!0);const a=this._createScopeSectionTreeElement(s,c);s.type()===Protocol.Debugger.ScopeType.Global?a.collapse():i&&s.type()!==Protocol.Debugger.ScopeType.Local||a.expand(),this._treeOutline.appendChild(a),0===r&&a.select(!0)}this._sidebarPaneUpdatedForTest()}_createScopeSectionTreeElement(e,t){let o=null;(e.type()===Protocol.Debugger.ScopeType.Local||Protocol.Debugger.ScopeType.Closure)&&(o=ls`No variables`);let i=e.typeName();if(e.type()===Protocol.Debugger.ScopeType.Closure){const t=e.name();i=t?ls`Closure (${UI.UIUtils.beautifyFunctionName(t)})`:ls`Closure`}let n=e.description();i&&i!==n||(n=void 0);const r=createElementWithClass("div","scope-chain-sidebar-pane-section-header tree-element-title");r.createChild("div","scope-chain-sidebar-pane-section-subtitle").textContent=n,r.createChild("div","scope-chain-sidebar-pane-section-title").textContent=i;const s=new ObjectUI.ObjectPropertiesSection.RootElement(resolveScopeInObject(e),this._linkifier,o,!0,t);return s.title=r,s.listItemElement.classList.add("scope-chain-sidebar-pane-section"),this._expandController.watchSection(i+(n?":"+n:""),s),s}_extraPropertiesForScope(e,t,o,i,n){if(e.type()!==Protocol.Debugger.ScopeType.Local)return[];const r=[];if(i&&r.push(new SDK.RemoteObject.RemoteObjectProperty("this",i)),n){const e=t.exception();e&&r.push(new SDK.RemoteObject.RemoteObjectProperty(Common.UIString.UIString("Exception"),e,void 0,void 0,void 0,void 0,void 0,!0));const i=o.returnValue();i&&r.push(new SDK.RemoteObject.RemoteObjectProperty(Common.UIString.UIString("Return value"),i,void 0,void 0,void 0,void 0,void 0,!0,o.setReturnValue.bind(o)))}return r}_sidebarPaneUpdatedForTest(){}}export class SourceScopeChainSidebarPane extends ScopeChainSidebarPaneBase{constructor(){super()}_getScopeChain(e){return e.sourceScopeChain}}export class ScopeChainSidebarPane extends ScopeChainSidebarPaneBase{_getScopeChain(e){return e.scopeChain()}}export const pathSymbol=Symbol("path");