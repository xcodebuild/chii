import{ESTreeWalker}from"./ESTreeWalker.js";export const RelaxedJSONParser={parse(e){let t;e="("+e+")";try{t=acorn.parse(e,{})}catch(e){return null}const r=new ESTreeWalker((function(e){switch(e.type){case"ObjectExpression":{const e={};u(e),l({key:null,tip:e,state:null,parentIsArray:!1});break}case"ArrayExpression":{const e=[];u(e),l({key:0,tip:e,state:States.ExpectValue,parentIsArray:!0});break}case"Property":n.state=States.ExpectKey;break;case"Literal":if(n.state===States.ExpectKey)n.key=e.value,n.state=States.ExpectValue;else if(n.state===States.ExpectValue)return u(i(e)),ESTreeWalker.SkipSubtree;break;case"Identifier":if(n.state===States.ExpectKey)n.key=e.name,n.state=States.ExpectValue;else if(n.state===States.ExpectValue)return u(i(e)),ESTreeWalker.SkipSubtree;break;case"UnaryExpression":if(n.state===States.ExpectValue)return u(i(e)),ESTreeWalker.SkipSubtree;break;case"Program":case"ExpressionStatement":break;default:return n.state===States.ExpectValue&&u(i(e)),ESTreeWalker.SkipSubtree}}),(function(e){"ObjectExpression"!==e.type&&"ArrayExpression"!==e.type||(n=s.pop())})),a=[],s=[];let n={key:0,tip:a,state:States.ExpectValue,parentIsArray:!0};r.setWalkNulls(!0);let p=!1;return r.walk(t),p?null:a.length?a[0]:null;function l(e){s.push(n),n=e}function u(e){n.tip[n.key]=e,n.parentIsArray?n.key++:n.state=null}function i(t){let r=!1;const a=t;let s;if("UnaryExpression"!==t.type||"-"!==t.operator&&"+"!==t.operator||("-"===t.operator&&(r=!0),t=t.argument),"Literal"===t.type)s=t.value;else{if("Identifier"!==t.type||!Keywords.hasOwnProperty(t.name))return p=!0,e.substring(a.start,a.end);s=Keywords[t.name]}if(r){if("number"!=typeof s)return p=!0,e.substring(a.start,a.end);s=-s}return s}}};export const States={ExpectKey:"ExpectKey",ExpectValue:"ExpectValue"};export const Keywords={NaN:NaN,true:!0,false:!1,Infinity:1/0,undefined:void 0,null:null};export let Context;