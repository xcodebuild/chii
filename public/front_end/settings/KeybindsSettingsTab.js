import*as UI from"../ui/ui.js";export class KeybindsSettingsTab extends UI.Widget.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css"),this._actions=self.UI.actionRegistry.actions().sort((t,e)=>t.category()<e.category()?-1:t.category()>e.category()?1:t.id()<e.id()?-1:t.id()>e.id()?1:0);this.contentElement.createChild("header").createChild("h1").textContent=ls`Custom keyboard shortcuts`;const t=this.contentElement.createChild("div","keybinds-list-item keybinds-header");t.createChild("div","keybinds-list-text").textContent=ls`Action`,t.createChild("div","keybinds-list-text").textContent=ls`Keyboard input`,this._list=new UI.ListWidget.ListWidget(this),this._list.registerRequiredCSS("settings/keybindsSettingsTab.css"),this._list.show(this.contentElement),this.update()}renderItem(t){const e=createElementWithClass("div","keybinds-list-item");if("string"==typeof t)e.classList.add("keybinds-category-header"),e.textContent=t;else{e.createChild("div","keybinds-list-text").textContent=t.title();const i=e.createChild("div","keybinds-list-text");self.UI.shortcutRegistry.shortcutsForAction(t.id()).forEach(t=>i.createChild("span","keybinds-key").textContent=t.title())}return e}removeItemRequested(t,e){}beginEdit(t){return new UI.ListWidget.Editor}commitEdit(t,e,i){}update(){let t;this._list.clear(),this._actions.forEach(e=>{t!==e.category()&&this._list.appendItem(e.category(),!1),this._list.appendItem(e,!1),t=e.category()})}}export let KeybindsItem;