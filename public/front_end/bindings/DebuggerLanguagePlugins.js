import*as Common from"../common/common.js";import*as SDK from"../sdk/sdk.js";import*as Workspace from"../workspace/workspace.js";class SourceScopeRemoteObject extends SDK.RemoteObject.RemoteObjectImpl{constructor(e,t){super(e,void 0,"object",void 0,null),this.variables=[]}async doGetProperties(e,t,r){if(t)return{properties:[],internalProperties:[]};return{properties:this.variables.map(e=>new SDK.RemoteObject.RemoteObjectProperty(e.name,new SDK.RemoteObject.LocalJSONObject("(type: "+e.type+")"),!1,!1,!0,!1)),internalProperties:[]}}}class SourceScope{constructor(e,t){this._callFrame=e,this._type=t,this._object=new SourceScopeRemoteObject(e.debuggerModel.runtimeModel(),t),this._name=t,this._startLocation=null,this._endLocation=null}callFrame(){return this._callFrame}type(){return this._type}typeName(){return this.type()}name(){return this._name}startLocation(){return this._startLocation}endLocation(){return this._endLocation}object(){return this._object}description(){return this.type()}}export class DebuggerLanguagePluginManager{constructor(e,t,r){this._sourceMapManager=e.sourceMapManager(),this._debuggerModel=e,this._debuggerWorkspaceBinding=r,this._plugins=[],this._uiSourceCodes=new Map,this._pluginForScriptId=new Map;const o=this._debuggerModel.target();this._project=new Bindings.ContentProviderBasedProject(t,"language_plugins::"+o.id(),Workspace.Workspace.projectTypes.Network,"",!1),Bindings.NetworkProject.setTargetForProject(this._project,o);const i=e.runtimeModel();this._eventHandlers=[this._debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource,this._newScriptSourceListener,this),i.addEventListener(SDK.RuntimeModel.Events.ExecutionContextDestroyed,this._executionContextDestroyed,this)]}clearPlugins(){this._plugins=[]}addPlugin(e){this._plugins.push(e)}hasPluginForScript(e){return this._pluginForScriptId.has(e.scriptId)}_getPluginForScript(e){const t=this._pluginForScriptId.get(e.scriptId);if(t)return t;for(const t of this._plugins)if(t.handleScript(e))return this._pluginForScriptId.set(e.scriptId,t),t;return null}async rawLocationToUILocation(e){const t=e.script();if(!t)return null;const r=this._pluginForScriptId.get(t.scriptId);if(!r)return null;const o={rawModuleId:t.scriptId,codeOffset:e.columnNumber-t.codeOffset()},i=await r.rawLocationToSourceLocation(o);if(!i||0===i.length)return null;const s=i[0],n=DebuggerLanguagePluginManager._makeUISourceFileURL(s.sourceFile,new URL(t.sourceURL).origin);if(null===n)return null;const c=this._project.uiSourceCodeForURL(n.toString());return c?c.uiLocation(s.lineNumber,s.columnNumber):null}async uiLocationToRawLocations(e,t,r){const o=this._uiSourceCodes.get(e);if(!o)return null;const i=[];for(const[e,t]of o){const r=this._pluginForScriptId.get(t.scriptId);r&&i.push(s(this._debuggerModel,r,e,t))}return 0===i.length?null:(await Promise.all(i)).flat();async function s(e,o,i,s){const n={rawModuleId:s.scriptId,sourceFile:i,lineNumber:t,columnNumber:r},c=await o.sourceLocationToRawLocation(n);return c&&0!==c.length?c.map(t=>new SDK.DebuggerModel.Location(e,s.scriptId,0,Number(t.codeOffset)+s.codeOffset())):[]}}async _getRawModule(e){return e.sourceURL.startsWith("wasm://")?e.sourceMapURL===SDK.SourceMap.WasmSourceMap.FAKE_URL?{code:await e.getWasmBytecode()}:null:{url:e.sourceURL}}async _getSourceFiles(e){const t=this._pluginForScriptId.get(e.scriptId);if(t){const r=await this._getRawModule(e);if(!r)return null;return await t.addRawModule(e.scriptId,e.sourceMapURL||"",r)}return null}static _makeUISourceFileURL(e,t){function r(e){try{const t=new URL(e);if("file:"!==t.protocol||!t.hostname)return t}catch(e){if(!(e instanceof TypeError))throw e}return null}return r(e)||r("file://"+e)||new URL(e,t)}_getOrCreateUISourceCode(e,t,r){let o=this._project.uiSourceCodeForURL(r);if(o)return o;o=this._project.createUISourceCode(r,Common.ResourceType.resourceTypes.SourceMapScript),Bindings.NetworkProject.setInitialFrameAttribution(o,t.frameId);const i=new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(r,Common.ResourceType.resourceTypes.SourceMapScript);return this._bindUISourceCode(o,t,e),this._project.addUISourceCodeWithProvider(o,i,null,"text/javascript"),o}_bindUISourceCode(e,t,r){const o=this._uiSourceCodes.get(e);o?o.push([r,t]):this._uiSourceCodes.set(e,[[r,t]])}_unbindUISourceCode(e,t){this._uiSourceCodes.set(e,this._uiSourceCodes.get(e).filter(([e,r])=>!t.has(r))),0===this._uiSourceCodes.get(e).length&&(this._project.removeFile(e.url()),this._uiSourceCodes.delete(e))}_newScriptSourceListener(e){const t=e.data;this._newScriptSource(t)}async _newScriptSource(e){if(!this._getPluginForScript(e))return;const t=await this._getSourceFiles(e);if(t){for(const r of t){const t=DebuggerLanguagePluginManager._makeUISourceFileURL(r,new URL(e.sourceURL).origin);if(null===t)return;this._getOrCreateUISourceCode(r,e,t.toString())}this._debuggerWorkspaceBinding.updateLocations(e)}}_executionContextDestroyed(e){const t=e.data,r=new Set(this._debuggerModel.scriptsForExecutionContext(t));for(const e of this._uiSourceCodes.keys())this._unbindUISourceCode(e,r);for(const e of r)this._pluginForScriptId.delete(e.scriptId)}dispose(){this._project.dispose();for(const e of this._plugins)e.dispose&&e.dispose();this._pluginForScriptId.clear(),this._uiSourceCodes.clear()}async resolveScopeChain(e){const t=e.script,r=this._pluginForScriptId.get(t.scriptId);if(!r)return null;const o=new Map,i=await r.listVariablesInScope({rawModuleId:t.scriptId,codeOffset:e.location().columnNumber-t.codeOffset()});if(i)for(const t of i)o.has(t.scope)||o.set(t.scope,new SourceScope(e,t.scope)),o.get(t.scope).object().variables.push(t);return Array.from(o.values())}}export class DebuggerLanguagePluginError extends Error{constructor(e,t){super(t),this.code=e,this.name="DebuggerLanguagePluginError"}}export let RawModule;export let RawLocation;export let SourceLocation;export let Variable;export class DebuggerLanguagePlugin{handleScript(e){}dispose(){}async addRawModule(e,t,r){}async sourceLocationToRawLocation(e){}async rawLocationToSourceLocation(e){}async listVariablesInScope(e){}async evaluateVariable(e,t){}}