import*as UI from"../ui/ui.js";import{Event,MediaChangeTypeKeys}from"./MediaModel.js";export let PlayerStatus;export let PlayerStatusMapElement;export class PlayerEntryTreeElement extends UI.TreeOutline.TreeElement{constructor(e,t){super(e.playerTitle,!1),this.titleFromUrl=!0,this._playerStatus=e,this._displayContainer=t,this.setLeadingIcons([UI.Icon.Icon.create("smallicon-videoplayer-playing","media-player")]),this.listItemElement.classList.add("player-entry-tree-element")}onselect(e){return this._displayContainer.renderMainPanel(this._playerStatus.playerID),!0}}export class PlayerListView extends UI.Widget.VBox{constructor(e){super(!0),this._playerStatuses=new Map,this._mainContainer=e,this._sidebarTree=new UI.TreeOutline.TreeOutlineInShadow,this.contentElement.appendChild(this._sidebarTree.element),this._sidebarTree.registerRequiredCSS("media/playerListView.css"),this._audioDevices=this._addListSection(Common.UIString("Audio I/O")),this._videoDevices=this._addListSection(Common.UIString("Video Capture Devices")),this._playerList=this._addListSection(Common.UIString("Players")),this._playerList.listItemElement.classList.add("player-entry-header")}_addListSection(e){const t=new UI.TreeOutline.TreeElement(e,!0);return t.listItemElement.classList.add("storage-group-list-item"),t.setCollapsible(!1),t.selectable=!1,this._sidebarTree.appendChild(t),t}addMediaElementItem(e){const t=new PlayerEntryTreeElement({playerTitle:e,playerID:e,exists:!0,playing:!1,titleEdited:!1},this._mainContainer);this._playerStatuses.set(e,t),this._playerList.appendChild(t)}setMediaElementPlayerTitle(e,t,i){if(this._playerStatuses.has(e)){const s=this._playerStatuses.get(e);i&&!s.titleFromUrl||(s.title=t,s.titleFromUrl=i)}}setMediaElementPlayerIcon(e,t){if(this._playerStatuses.has(e)){this._playerStatuses.get(e).setLeadingIcons([UI.Icon.Icon.create("smallicon-videoplayer-"+t,"media-player")])}}renderChanges(e,t,i){if(i===MediaChangeTypeKeys.Property)for(const i of t)if("frame_title"===i.name&&i.value&&this.setMediaElementPlayerTitle(e,i.value,!1),"frame_url"===i.name){const t=i.value.substring(i.value.lastIndexOf("/")+1);this.setMediaElementPlayerTitle(e,t,!0)}if(i===MediaChangeTypeKeys.Event){let i=null;for(const e of t)"Event"===e.name&&("PLAY"===e.value?i="playing":"PAUSE"===e.value?i="paused":"WEBMEDIAPLAYER_DESTROYED"===e.value&&(i="destroyed"));i&&this.setMediaElementPlayerIcon(e,i)}}}