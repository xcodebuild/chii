import*as UI from"../ui/ui.js";export let ChevronTab;export class ChevronTabbedPanel extends UI.Widget.VBox{constructor(t){super(),this.registerRequiredCSS("media/chevronTabbedPanel.css"),this._chevronButtons=new Map,this._header_panel=this.contentElement.createChild("div","chevron-tabbed-panel-title"),this._content_panel=this.contentElement.createChild("div","chevron-tabbed-panel-content"),this._header_panel_button_container=this._header_panel.createChild("div","chevron-tabbed-panel-title-buttons");for(const e in t)this.CreateAndAddDropdownButton(e,t[e])}CreateAndAddDropdownButton(t,e){const n=this._header_panel_button_container.createChild("div","chevron-tabbed-panel-buttons-item");n.appendChild(e.title),this._chevronButtons.set(t,{content:e.element,button:n}),1===this._chevronButtons.size&&(this._DisplayContentSection(e.element),n.classList.add("selected")),n.addEventListener("click",t=>{if(!t.currentTarget.classList.contains("selected")){for(const t of this._chevronButtons.values())t.button.classList.remove("selected");t.currentTarget.classList.add("selected"),this._DisplayContentSection(e.element)}},!1)}RemoveTab(t,e=!1){const n=this._chevronButtons.get(t);if(this._chevronButtons.delete(t),!e&&n.classList.contains("selected")&&0!==this._chevronButtons.size){this._chevronButtons.values().next().value.classList.add("selected")}this._header_panel_button_container.removeChild(n.button)}RemoveTabs(t){for(const e of t)this.RemoveTab(e,!0)}_DisplayContentSection(t){this._content_panel.innerHTML="",t.show(this._content_panel)}GetListOfButtons(){return this._chevronButtons.keys()}GetContentPanelByName(t){return this._chevronButtons.has(t)?this._chevronButtons.get(t).content:null}GetButtonByName(t){return this._chevronButtons.get(t).button}}