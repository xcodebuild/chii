import*as Common from"../common/common.js";import*as ARIAUtils from"./ARIAUtils.js";import{CheckboxLabel}from"./UIUtils.js";export const createSettingCheckbox=function(e,t,n,o){const c=CheckboxLabel.create(e);o&&(c.title=o);const r=c.checkboxElement;if(r.name=e,bindCheckbox(r,t),n)return c;const i=createElement("p");return i.appendChild(c),i};const createSettingSelect=function(e,t,n,o){const c=createElement("p"),r=c.createChild("label"),i=c.createChild("select","chrome-select");r.textContent=e,o&&(c.classList.add("chrome-select-label"),r.createChild("p").textContent=o),ARIAUtils.bindLabelToControl(r,i);for(let e=0;e<t.length;++e){const n=t[e],o=n.raw?n.text:Common.UIString.UIString(n.text);i.add(new Option(o,n.value))}return n.addChangeListener(l),l(),i.addEventListener("change",(function(){n.set(t[i.selectedIndex].value)}),!1),c;function l(){const e=n.get();for(let n=0;n<t.length;n++)t[n].value===e&&(i.selectedIndex=n)}};export const bindCheckbox=function(e,t){function n(){e.checked!==t.get()&&(e.checked=t.get())}t.addChangeListener(n),n(),e.addEventListener("change",(function(){t.get()!==e.checked&&t.set(e.checked)}),!1)};export const createCustomSetting=function(e,t){const n=createElement("p"),o=n.createChild("fieldset"),c=o.createChild("label");return c.textContent=e,ARIAUtils.bindLabelToControl(c,t),o.appendChild(t),n};export const createControlForSetting=function(e,t){if(!e.extension())return null;const n=e.extension().descriptor(),o=Common.UIString.UIString(e.title()||"");switch(n.settingType){case"boolean":return createSettingCheckbox(o,e);case"enum":return Array.isArray(n.options)?createSettingSelect(o,n.options,e,t):(console.error("Enum setting defined without options"),null);default:return console.error("Invalid setting type: "+n.settingType),null}};export class SettingUI{settingElement(){}}