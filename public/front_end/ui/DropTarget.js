import{createShadowRootWithCoreStyles}from"./utils/create-shadow-root-with-core-styles.js";export class DropTarget{constructor(e,t,s,r){e.addEventListener("dragenter",this._onDragEnter.bind(this),!0),e.addEventListener("dragover",this._onDragOver.bind(this),!0),this._element=e,this._transferTypes=t,this._messageText=s,this._handleDrop=r,this._enabled=!0}setEnabled(e){this._enabled=e}_onDragEnter(e){this._enabled&&this._hasMatchingType(e)&&e.consume(!0)}_hasMatchingType(e){for(const t of this._transferTypes){if(Array.from(e.dataTransfer.items).find(e=>t.kind===e.kind&&!!t.type.exec(e.type)))return!0}return!1}_onDragOver(e){if(!this._enabled||!this._hasMatchingType(e))return;if(e.dataTransfer.dropEffect="copy",e.consume(!0),this._dragMaskElement)return;this._dragMaskElement=this._element.createChild("div","");createShadowRootWithCoreStyles(this._dragMaskElement,"ui/dropTarget.css").createChild("div","drop-target-message").textContent=this._messageText,this._dragMaskElement.addEventListener("drop",this._onDrop.bind(this),!0),this._dragMaskElement.addEventListener("dragleave",this._onDragLeave.bind(this),!0)}_onDrop(e){e.consume(!0),this._removeMask(),this._enabled&&this._handleDrop(e.dataTransfer)}_onDragLeave(e){e.consume(!0),this._removeMask()}_removeMask(){this._dragMaskElement.remove(),delete this._dragMaskElement}}export const Type={URI:{kind:"string",type:/text\/uri-list/},Folder:{kind:"file",type:/$^/},File:{kind:"file",type:/.*/},WebFile:{kind:"file",type:/[\w]+/},ImageFile:{kind:"file",type:/image\/.*/}};