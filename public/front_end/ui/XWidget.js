import{appendStyle}from"./utils/append-style.js";import{XElement}from"./XElement.js";export class XWidget extends XElement{constructor(){super(),this.style.setProperty("display","flex"),this.style.setProperty("flex-direction","column"),this.style.setProperty("align-items","stretch"),this.style.setProperty("justify-content","flex-start"),this.style.setProperty("contain","layout style"),this._visible=!1,this._shadowRoot,this._defaultFocusedElement=null,this._elementsToRestoreScrollPositionsFor=[],this._onShownCallback,this._onHiddenCallback,this._onResizedCallback,XWidget._observer||(XWidget._observer=new ResizeObserver(e=>{for(const t of e)t.target._visible&&t.target._onResizedCallback&&t.target._onResizedCallback.call(null)})),XWidget._observer.observe(this),this.setElementsToRestoreScrollPositionsFor([this])}isShowing(){return this._visible}registerRequiredCSS(e){appendStyle(this._shadowRoot||this,e)}setOnShown(e){this._onShownCallback=e}setOnHidden(e){this._onHiddenCallback=e}setOnResized(e){this._onResizedCallback=e}setElementsToRestoreScrollPositionsFor(e){for(const e of this._elementsToRestoreScrollPositionsFor)e.removeEventListener("scroll",XWidget._storeScrollPosition,{passive:!0,capture:!1});this._elementsToRestoreScrollPositionsFor=e;for(const e of this._elementsToRestoreScrollPositionsFor)e.addEventListener("scroll",XWidget._storeScrollPosition,{passive:!0,capture:!1})}restoreScrollPositions(){for(const e of this._elementsToRestoreScrollPositionsFor)e._scrollTop&&(e.scrollTop=e._scrollTop),e._scrollLeft&&(e.scrollLeft=e._scrollLeft)}static _storeScrollPosition(e){const t=e.currentTarget;t._scrollTop=t.scrollTop,t._scrollLeft=t.scrollLeft}setDefaultFocusedElement(e){if(e&&!this.isSelfOrAncestor(e))throw new Error("Default focus must be descendant");this._defaultFocusedElement=e}focus(){if(!this._visible)return;let e;if(this._defaultFocusedElement&&this.isSelfOrAncestor(this._defaultFocusedElement))e=this._defaultFocusedElement;else if(-1!==this.tabIndex)e=this;else{let t=this.traverseNextNode(this);for(;t;){if(t instanceof XWidget&&t._visible){e=t;break}t=t.traverseNextNode(this)}}e&&!e.hasFocus()&&(e===this?HTMLElement.prototype.focus.call(this):e.focus())}connectedCallback(){this._visible=!0,this.restoreScrollPositions(),this._onShownCallback&&this._onShownCallback.call(null)}disconnectedCallback(){this._visible=!1,this._onHiddenCallback&&this._onHiddenCallback.call(null)}}self.customElements.define("x-widget",XWidget),self.XWidget=XWidget;