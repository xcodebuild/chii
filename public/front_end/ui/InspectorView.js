import*as Common from"../common/common.js";import*as Host from"../host/host.js";import{ActionDelegate as ActionDelegateInterface}from"./ActionDelegate.js";import{Context}from"./Context.js";import{Dialog}from"./Dialog.js";import{GlassPane}from"./GlassPane.js";import{Icon}from"./Icon.js";import{KeyboardShortcut}from"./KeyboardShortcut.js";import{Panel}from"./Panel.js";import{SplitWidget}from"./SplitWidget.js";import{Events as TabbedPaneEvents}from"./TabbedPane.js";import{ToolbarButton}from"./Toolbar.js";import{View,ViewLocation,ViewLocationResolver}from"./View.js";import{ViewManager}from"./ViewManager.js";import{VBox,WidgetFocusRestorer}from"./Widget.js";export class InspectorView extends VBox{constructor(){super(),GlassPane.setContainer(this.element),this.setMinimumSize(240,72),this._drawerSplitWidget=new SplitWidget(!1,!0,"Inspector.drawerSplitViewState",200,200),this._drawerSplitWidget.hideSidebar(),this._drawerSplitWidget.hideDefaultResizer(),this._drawerSplitWidget.enableShowModeSaving(),this._drawerSplitWidget.show(this.element),this._drawerTabbedLocation=ViewManager.instance().createTabbedLocation(this._showDrawer.bind(this,!1),"drawer-view",!0,!0);this._drawerTabbedLocation.enableMoreTabsButton().setTitle(ls`More Tools`),this._drawerTabbedPane=this._drawerTabbedLocation.tabbedPane(),this._drawerTabbedPane.setMinimumSize(0,27);const e=new ToolbarButton(Common.UIString.UIString("Close drawer"),"largeicon-delete");e.addEventListener(ToolbarButton.Events.Click,this._closeDrawer,this),this._drawerSplitWidget.installResizer(this._drawerTabbedPane.headerElement()),this._drawerTabbedPane.addEventListener(TabbedPaneEvents.TabSelected,this._drawerTabSelected,this),this._drawerSplitWidget.setSidebarWidget(this._drawerTabbedPane),this._drawerTabbedPane.rightToolbar().appendToolbarItem(e),this._tabbedLocation=ViewManager.instance().createTabbedLocation(Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront.bind(Host.InspectorFrontendHost.InspectorFrontendHostInstance),"panel",!0,!0,Root.Runtime.queryParam("panel")),this._tabbedPane=this._tabbedLocation.tabbedPane(),this._tabbedPane.registerRequiredCSS("ui/inspectorViewTabbedPane.css"),this._tabbedPane.addEventListener(TabbedPaneEvents.TabSelected,this._tabSelected,this),this._tabbedPane.setAccessibleName(Common.UIString.UIString("Panels")),Host.userMetrics.setLaunchPanel(this._tabbedPane.selectedTabId),Host.InspectorFrontendHost.isUnderTest()&&this._tabbedPane.setAutoSelectFirstItemOnShow(!1),this._drawerSplitWidget.setMainWidget(this._tabbedPane),this._keyDownBound=this._keyDown.bind(this),Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(Host.InspectorFrontendHostAPI.Events.ShowPanel,function(e){const t=e.data;this.showPanel(t)}.bind(this))}static instance(){return self.runtime.sharedInstance(InspectorView)}wasShown(){this.element.ownerDocument.addEventListener("keydown",this._keyDownBound,!1)}willHide(){this.element.ownerDocument.removeEventListener("keydown",this._keyDownBound,!1)}resolveLocation(e){return"drawer-view"===e?this._drawerTabbedLocation:"panel"===e?this._tabbedLocation:null}createToolbars(){this._tabbedPane.leftToolbar().appendItemsAtLocation("main-toolbar-left"),this._tabbedPane.rightToolbar().appendItemsAtLocation("main-toolbar-right")}addPanel(e){this._tabbedLocation.appendView(e)}hasPanel(e){return this._tabbedPane.hasTab(e)}panel(e){return ViewManager.instance().view(e).widget()}onSuspendStateChanged(e){this._currentPanelLocked=e,this._tabbedPane.setCurrentTabLocked(this._currentPanelLocked),this._tabbedPane.leftToolbar().setEnabled(!this._currentPanelLocked),this._tabbedPane.rightToolbar().setEnabled(!this._currentPanelLocked)}canSelectPanel(e){return!this._currentPanelLocked||this._tabbedPane.selectedTabId===e}showPanel(e){return ViewManager.instance().showView(e)}setPanelIcon(e,t){this._tabbedPane.setTabIcon(e,t)}currentPanelDeprecated(){return ViewManager.instance().materializedWidget(this._tabbedPane.selectedTabId||"")}_showDrawer(e){this._drawerTabbedPane.isShowing()||(this._drawerSplitWidget.showBoth(),this._focusRestorer=e?new WidgetFocusRestorer(this._drawerTabbedPane):null)}drawerVisible(){return this._drawerTabbedPane.isShowing()}_closeDrawer(){this._drawerTabbedPane.isShowing()&&(this._focusRestorer&&this._focusRestorer.restore(),this._drawerSplitWidget.hideSidebar(!0))}setDrawerMinimized(e){this._drawerSplitWidget.setSidebarMinimized(e),this._drawerSplitWidget.setResizable(!e)}isDrawerMinimized(){return this._drawerSplitWidget.isSidebarMinimized()}closeDrawerTab(e,t){this._drawerTabbedPane.closeTab(e,t)}_keyDown(e){const t=e;if(!KeyboardShortcut.eventHasCtrlOrMeta(t)||e.altKey||e.shiftKey)return;if(Common.Settings.moduleSetting("shortcutPanelSwitch").get()){let a=-1;if(e.keyCode>48&&e.keyCode<58?a=e.keyCode-49:e.keyCode>96&&e.keyCode<106&&t.location===KeyboardEvent.DOM_KEY_LOCATION_NUMPAD&&(a=e.keyCode-97),-1!==a){const t=this._tabbedPane.tabIds()[a];t&&(Dialog.hasInstance()||this._currentPanelLocked||this.showPanel(t),e.consume(!0))}}}onResize(){GlassPane.containerMoved(this.element)}topResizerElement(){return this._tabbedPane.headerElement()}toolbarItemResized(){this._tabbedPane.headerResized()}_tabSelected(e){const t=e.data.tabId;Host.userMetrics.panelShown(t)}_drawerTabSelected(e){const t=e.data.tabId;Host.userMetrics.drawerShown(t)}setOwnerSplit(e){this._ownerSplitWidget=e}ownerSplit(){return this._ownerSplitWidget}minimize(){this._ownerSplitWidget&&this._ownerSplitWidget.setSidebarMinimized(!0)}restore(){this._ownerSplitWidget&&this._ownerSplitWidget.setSidebarMinimized(!1)}}export class ActionDelegate{handleAction(e,t){switch(t){case"main.toggle-drawer":return self.UI.inspectorView.drawerVisible()?self.UI.inspectorView._closeDrawer():self.UI.inspectorView._showDrawer(!0),!0;case"main.next-tab":return self.UI.inspectorView._tabbedPane.selectNextTab(),self.UI.inspectorView._tabbedPane.focus(),!0;case"main.previous-tab":return self.UI.inspectorView._tabbedPane.selectPrevTab(),self.UI.inspectorView._tabbedPane.focus(),!0}return!1}}