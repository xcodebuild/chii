import*as Platform from"../platform/platform.js";export function UIString(t,...r){return Platform.StringUtilities.vsprintf(localize(t),Array.prototype.slice.call(arguments,1))}export function serializeUIString(t,r=[]){const i={messageParts:[t],values:r};return JSON.stringify(i)}export function deserializeUIString(t){return t?JSON.parse(t):{}}export function localize(t){return t}export class UIStringFormat{constructor(t){this._localizedFormat=localize(t),this._tokenizedFormat=Platform.StringUtilities.tokenizeFormatString(this._localizedFormat,Platform.StringUtilities.standardFormatters)}static _append(t,r){return t+r}format(t){return Platform.StringUtilities.format(this._localizedFormat,arguments,Platform.StringUtilities.standardFormatters,"",UIStringFormat._append,this._tokenizedFormat).formattedResult}}const _substitutionStrings=new WeakMap;export function ls(t,...r){if("string"==typeof t)return t;let i=_substitutionStrings.get(t);return i||(i=t.join("%s"),_substitutionStrings.set(t,i)),UIString(i,...r)}